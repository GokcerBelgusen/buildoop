#!/usr/bin/env groovy 
/* vim:set ts=4:sw=4:et:sts=4:ai:tw=80
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* 
 * Add maven slf4j with Logback logger repository dependencies to our classpath
 */
@Grab('log4j:log4j:1.2.17')

import org.apache.log4j.*
import groovy.util.logging.*

@Log4j
class Buildoop {

	def Buildoop() {
	}

	def get_version() {
		println "Buildoop v0.0.1-alpha (c) 2014\n"

		def config = new ConfigSlurper().parse(new File('buildoop/conf/log4jconfig.groovy').toURL())
        PropertyConfigurator.configure(config.toProperties()) 

		log.info "\nLOG4J Logging (${log.name}: ${log.class}):"
	}

    static def main(args) {
        def buildoop = new Buildoop()
        buildoop.get_version()

		String[] roots = ['./buildoop/lib']
		def engine = new GroovyScriptEngine(roots)

		// 1. Parsing the command line
        log.info  "Parsing command line"
		def ParseOptionsClass = engine.loadScriptByName('ParseOptions.groovy')
		def parseOptions = ParseOptionsClass.newInstance(log)
		def wo = parseOptions.parseOpt(args)

		// 2. Host tools and BOM file sanity checking
        log.info  "Sanity checking bits"
		def SanityCheckingClass = engine.loadScriptByName('SanityChecking.groovy')
		def sanityChecking = SanityCheckingClass.newInstance()

		// 3. Real works with the working options from user
		println "BOM file: " + wo["bom"]
		println "Pkg file: " + wo["pkg"]
		println "Options : " + wo["arg"]

    }
}

